{"version":3,"file":"primeng-dataview.umd.js","sources":["../../src/app/components/dataview/dataview.ts","../../src/app/components/dataview/primeng-dataview.ts"],"names":["EventEmitter","ObjectUtils","TranslationKeys","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","ChangeDetectorRef","FilterService","PrimeNGConfig","Input","Output","ContentChild","Header","Footer","ContentChildren","PrimeTemplate","NgModule","CommonModule","SharedModule","PaginatorModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnInit,AfterContentInit,Input,Output,EventEmitter,ContentChild,ContentChildren,QueryList,TemplateRef,OnChanges,SimpleChanges,ChangeDetectionStrategy,ChangeDetectorRef, ViewEncapsulation, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectUtils} from 'primeng/utils';\nimport {Header,Footer,PrimeTemplate,SharedModule,FilterService, TranslationKeys, PrimeNGConfig} from 'primeng/api';\nimport {PaginatorModule} from 'primeng/paginator';\nimport {BlockableUI} from 'primeng/api';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'p-dataView',\n    template: `\n        <div [ngClass]=\"{'p-dataview p-component': true, 'p-dataview-list': (layout === 'list'), 'p-dataview-grid': (layout === 'grid')}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-dataview-loading\" *ngIf=\"loading\">\n                <div class=\"p-dataview-loading-overlay p-component-overlay\">\n                    <i [class]=\"'p-dataview-loading-icon pi-spin ' + loadingIcon\"></i>\n                </div>\n            </div>\n            <div class=\"p-dataview-header\" *ngIf=\"header || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"paginate($event)\" styleClass=\"p-paginator-top\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\" [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n            <div class=\"p-dataview-content\">\n                <div class=\"p-grid p-nogutter\">\n                    <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"paginator ? ((filteredValue||value) | slice:(lazy ? 0 : first):((lazy ? 0 : first) + rows)) : (filteredValue||value)\" [ngForTrackBy]=\"trackBy\">\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: rowData, rowIndex: rowIndex}\"></ng-container>\n                    </ng-template>\n                    <div *ngIf=\"isEmpty()\" class=\"p-col\">\n                            <div class=\"p-dataview-emptymessage\">\n                            <ng-container *ngIf=\"!emptyMessageTemplate; else emptyFilter\">\n                                    {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"paginate($event)\" styleClass=\"p-paginator-bottom\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\" [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n            <div class=\"p-dataview-footer\" *ngIf=\"footer || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./dataview.css']\n})\nexport class DataView implements OnInit,AfterContentInit,OnDestroy,BlockableUI,OnChanges {\n\n    @Input() paginator: boolean;\n\n    @Input() rows: number;\n\n    @Input() totalRecords: number;\n\n    @Input() pageLinks: number = 5;\n\n    @Input() rowsPerPageOptions: any[];\n\n    @Input() paginatorPosition: string = 'bottom';\n\n    @Input() alwaysShowPaginator: boolean = true;\n\n    @Input() paginatorDropdownAppendTo: any;\n\n    @Input() paginatorDropdownScrollHeight: string = '200px';\n\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\n\n    @Input() showCurrentPageReport: boolean;\n\n    @Input() showJumpToPageDropdown: boolean;\n\n    @Input() showFirstLastIcon: boolean = true;\n\n    @Input() showPageLinks: boolean = true;\n\n    @Input() lazy: boolean;\n\n    @Input() emptyMessage: string = '';\n\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() trackBy: Function = (index: number, item: any) => item;\n\n    @Input() filterBy: string;\n\n    @Input() filterLocale: string;\n\n    @Input() loading: boolean;\n\n    @Input() loadingIcon: string = 'pi pi-spinner';\n\n    @Input() first: number = 0;\n\n    @Input() sortField: string;\n\n    @Input() sortOrder: number;\n\n    @Input() value: any[];\n\n    @Output() onPage: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSort: EventEmitter<any> = new EventEmitter();\n\n    @Output() onChangeLayout: EventEmitter<any> = new EventEmitter();\n\n    @ContentChild(Header) header;\n\n    @ContentChild(Footer) footer;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    _value: any[];\n\n    listItemTemplate: TemplateRef<any>;\n\n    gridItemTemplate: TemplateRef<any>;\n\n    itemTemplate: TemplateRef<any>;\n\n    headerTemplate: TemplateRef<any>;\n    \n    emptyMessageTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    paginatorLeftTemplate: TemplateRef<any>;\n\n    paginatorRightTemplate: TemplateRef<any>;\n\n    paginatorDropdownItemTemplate: TemplateRef<any>;\n\n    filteredValue: any[];\n\n    filterValue: string;\n\n    initialized: boolean;\n\n    _layout: string = 'list';\n\n    translationSubscription: Subscription;\n\n    @Input() get layout(): string {\n        return this._layout;\n    }\n\n    set layout(layout: string) {\n        this._layout = layout;\n\n        if (this.initialized) {\n            this.changeLayout(layout);\n        }\n    }\n\n    constructor(public el: ElementRef, public cd: ChangeDetectorRef, public filterService: FilterService, public config: PrimeNGConfig) {}\n\n    ngOnInit() {\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.cd.markForCheck();\n        });\n        this.initialized = true;\n    }\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        if (simpleChanges.value) {\n            this._value = simpleChanges.value.currentValue;\n            this.updateTotalRecords();\n\n            if (!this.lazy && this.hasFilter()) {\n                this.filter(this.filterValue);\n            }\n        }\n\n        if (simpleChanges.sortField || simpleChanges.sortOrder) {\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                this.sort();\n            }\n        }\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'listItem':\n                    this.listItemTemplate = item.template;\n                break;\n\n                case 'gridItem':\n                    this.gridItemTemplate = item.template;\n                break;\n\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                break;\n\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                break;\n\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                break;\n\n                case 'empty':\n                    this.emptyMessageTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n            }\n        });\n\n        this.updateItemTemplate();\n    }\n\n    updateItemTemplate() {\n        switch(this.layout) {\n            case 'list':\n                this.itemTemplate = this.listItemTemplate;\n            break;\n\n            case 'grid':\n                this.itemTemplate = this.gridItemTemplate;\n            break;\n        }\n    }\n\n    changeLayout(layout: string) {\n        this._layout = layout;\n        this.onChangeLayout.emit({\n            layout: this.layout\n        });\n        this.updateItemTemplate();\n\n        this.cd.markForCheck();\n    }\n\n    updateTotalRecords() {\n        this.totalRecords = this.lazy ? this.totalRecords : (this._value ? this._value.length : 0);\n    }\n\n    paginate(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n    }\n\n    sort() {\n        this.first = 0;\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else if (this.value) {\n            this.value.sort((data1, data2) => {\n                let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\n                let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\n                let result = null;\n\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2);\n                else\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                return (this.sortOrder * result);\n            });\n\n            if (this.hasFilter()) {\n                this.filter(this.filterValue);\n            }\n        }\n\n        this.onSort.emit({\n            sortField: this.sortField,\n            sortOrder: this.sortOrder\n        });\n    }\n\n    isEmpty() {\n        let data = this.filteredValue||this.value;\n        return data == null || data.length == 0;\n    }\n\n    createLazyLoadMetadata(): any {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder\n        };\n    }\n\n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n\n\n\n    get emptyMessageLabel(): string {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n\n    filter(filter: string, filterMatchMode:string =\"contains\") {\n        this.filterValue = filter;\n\n        if (this.value && this.value.length) {\n            let searchFields = this.filterBy.split(',');\n            this.filteredValue = this.filterService.filter(this.value, searchFields, filter, filterMatchMode, this.filterLocale);\n\n            if (this.filteredValue.length === this.value.length ) {\n                this.filteredValue = null;\n            }\n\n            if (this.paginator) {\n                this.first = 0;\n                this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n            }\n\n            this.cd.markForCheck();\n        }\n    }\n\n    hasFilter() {\n        return this.filterValue && this.filterValue.trim().length > 0;\n    }\n\n    ngOnDestroy() {\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n    }\n}\n\n@Component({\n    selector: 'p-dataViewLayoutOptions',\n    template: `\n        <div [ngClass]=\"'p-dataview-layout-options p-selectbutton p-buttonset'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <button type=\"button\" class=\"p-button p-button-icon-only\" [ngClass]=\"{'p-highlight': dv.layout === 'list'}\" (click)=\"changeLayout($event, 'list')\" (keydown.enter)=\"changeLayout($event, 'list')\">\n                <i class=\"pi pi-bars\"></i>\n            </button><button type=\"button\" class=\"p-button p-button-icon-only\" [ngClass]=\"{'p-highlight': dv.layout === 'grid'}\" (click)=\"changeLayout($event, 'grid')\" (keydown.enter)=\"changeLayout($event, 'grid')\">\n                <i class=\"pi pi-th-large\"></i>\n            </button>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DataViewLayoutOptions  {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    constructor(public dv: DataView) {}\n\n    changeLayout(event: Event, layout: string) {\n        this.dv.changeLayout(layout);\n        event.preventDefault();\n    }\n}\n@NgModule({\n    imports: [CommonModule,SharedModule,PaginatorModule],\n    exports: [DataView,SharedModule,DataViewLayoutOptions],\n    declarations: [DataView,DataViewLayoutOptions]\n})\nexport class DataViewModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}